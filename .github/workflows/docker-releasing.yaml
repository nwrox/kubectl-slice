name: DockerReleasing
on:
  push:

env:
  GH_USER: ${{ github.actor }}
  IMAGE_TAG: "latest"

jobs:
  docker:
    runs-on: ubuntu-latest
    
    permissions:
      packages: write
    
    steps:
      -
        name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GH_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: "Set build date"
        id: build_date
        run: echo "builddate=$(date -Isec)" >> "${GITHUB_OUTPUT}"
      -
        name: "Set repository description"
        id: "repo_desc"
        run: |
          set -ex

          RESPONSE=`curl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --show-error \
            --silent \
            --url "https://api.github.com/repos/${{ github.repository }}"`
          
          echo "description=$(jq -r '.description' <<< "${RESPONSE}")" >> "${GITHUB_OUTPUT}"
      -
        name: "Set release version"
        id: "release_version"
        run: |
          set -ex

          RESPONSE=`curl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --show-error \
            --silent \
            --url "https://api.github.com/repos/${{ github.repository }}/releases"`
          
          echo "version=$(jq -r '.[].tag_name' <<< "${RESPONSE}")" >> "${GITHUB_OUTPUT}"
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          build-args: |
            BUILD_DATE=${{ steps.build_date.outputs.builddate }}
            GH_REPO=${{ github.repository }}
            GH_REPO_DESCRIPTION=${{ steps.repo_desc.outputs.description }}
            IMAGE_TAG=${{ env.IMAGE_TAG }}
            SLICE_VERSION=${{ steps.release_version.outputs.version }}
          push: true
          tags: ghcr.io/${{ env.GH_USER }}/kubectl-slice:${{ env.IMAGE_TAG }}
